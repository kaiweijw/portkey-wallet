name: Android Build

on:
  push:
    branches: [dev]
  pull_request:
    branches: [dev]

jobs:
  build:
    runs-on: portkey-wallet-kw-runner
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Install build tools
        run: sudo apt-get install -y build-essential

      - name: Cache Gradle Wrapper
        uses: actions/cache@v4
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('packages/mobile-app-did/android/gradle/wrapper/gradle-wrapper.properties') }}

      - name: Cache Gradle Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('packages/mobile-app-did/android/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-caches-

      - name: Install yarn
        run: npm install -g yarn

      - name: Install dependencies
        run: |
          cd packages/mobile-app-did
          yarn install

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          cmdline-tools-version: 8512546

      - name: Create .env file
        run: |
          cp packages/mobile-app-did/.env.example packages/mobile-app-did/.env
          sed -i "s|PORT_KEY_CODE *=.*|PORT_KEY_CODE=${{ secrets.PORT_KEY_CODE }}|" packages/mobile-app-did/.env
          sed -i "s|BACKEND_PUBKEY *=.*|BACKEND_PUBKEY=${{ secrets.BACKEND_PUBKEY }}|" packages/mobile-app-did/.env
          sed -i "s|VERSION *=.*|VERSION=${{ secrets.VERSION }}|" packages/mobile-app-did/.env
          sed -i "s|COMMUNICATE_APP_PRIVITEKEY *=.*|COMMUNICATE_APP_PRIVITEKEY=${{ secrets.COMMUNICATE_APP_PRIVITEKEY }}|" packages/mobile-app-did/.env
          sed -i "s|RELEASE_STORE_FILE *=.*|RELEASE_STORE_FILE=${{ secrets.RELEASE_STORE_FILE }}|" packages/mobile-app-did/.env
          sed -i "s|RELEASE_KEY_ALIAS *=.*|RELEASE_KEY_ALIAS=${{ secrets.RELEASE_KEY_ALIAS }}|" packages/mobile-app-did/.env
          sed -i "s|RELEASE_STORE_PASSWORD *=.*|RELEASE_STORE_PASSWORD=${{ secrets.RELEASE_STORE_PASSWORD }}|" packages/mobile-app-did/.env
          sed -i "s|RELEASE_KEY_PASSWORD *=.*|RELEASE_KEY_PASSWORD=${{ secrets.RELEASE_KEY_PASSWORD }}|" packages/mobile-app-did/.env
          sed -i "s|LOCAL_STORE_FILE *=.*|LOCAL_STORE_FILE=${{ secrets.LOCAL_STORE_FILE }}|" packages/mobile-app-did/.env
          sed -i "s|GOOGLE_WEB_CLIENT_ID *=.*|GOOGLE_WEB_CLIENT_ID=${{ secrets.GOOGLE_WEB_CLIENT_ID }}|" packages/mobile-app-did/.env
          sed -i "s|GOOGLE_IOS_CLIENT_ID *=.*|GOOGLE_IOS_CLIENT_ID=${{ secrets.GOOGLE_IOS_CLIENT_ID }}|" packages/mobile-app-did/.env
          sed -i "s|GOOGLE_ANDROID_CLIENT_ID *=.*|GOOGLE_ANDROID_CLIENT_ID=${{ secrets.GOOGLE_ANDROID_CLIENT_ID }}|" packages/mobile-app-did/.env

      - name: Setup Environment
        run: yarn handle-network network-test1
        working-directory: packages/mobile-app-did

      - name: Generate Keystore (for development purposes)
        env:
          STORE_FILE: ${{ secrets.RELEASE_STORE_FILE }}
          KEY_ALIAS: ${{ secrets.RELEASE_KEY_ALIAS }}
          STORE_PASSWORD: ${{ secrets.RELEASE_STORE_PASSWORD }}
          KEY_PASSWORD: ${{ secrets.RELEASE_KEY_PASSWORD }}
        run: |
          keytool -genkeypair -v \
            -keystore packages/mobile-app-did/android/app/$STORE_FILE \
            -alias $KEY_ALIAS \
            -keyalg RSA -keysize 2048 -validity 10000 \
            -storepass $STORE_PASSWORD \
            -keypass $KEY_PASSWORD \
            -dname "CN=Your Name, OU=Your Org, O=Your Company, L=Your City, ST=Your State, C=Your Country"

      - name: Create Directory for ruby
        run: sudo mkdir /opt/hostedtoolcache && sudo chown -R runner:runner /opt/hostedtoolcache

      # Setup Ruby while Caching Gems
      - name: Install Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3
          bundler-cache: true

      # Install fastlane
      - name: Install Fastlane
        run: gem install fastlane
        working-directory: packages/mobile-app-did/android

      - name: Bundle Install
        run: bundle install
        working-directory: packages/mobile-app-did/android

      # - name: Build Android Release
      #   run: |
      #     cd packages/mobile-app-did
      #     yarn build:apk-test1

      - name: Build android release
        uses: maierj/fastlane-action@v3.1.0
        with:
          lane: 'beta'
          subdirectory: packages/mobile-app-did/android
        env:
          ANDROID_KEYSTORE_FILE: ${{ secrets.RELEASE_STORE_FILE }}
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.RELEASE_STORE_PASSWORD }}

      - name: List files in APK output directory
        run: |
          ls -R packages/mobile-app-did/android/app/build/outputs/apk/

      - name: Upload APK Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: apk-files
          path: packages/mobile-app-did/android/app/build/outputs/apk/**/*.apk
          retention-days: 3
